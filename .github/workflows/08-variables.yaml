name: 08 - Using Variables
on:
  workflow_dispatch:
  # push:
env:
  WORKFLOW_VAR: "I am a workflow env var"
  OVERWRITTEN: "I will be overwritten"
  UNDEFINED_VAR_WITH_DEFAULT: "${{ vars.UNDEFINED_VAR || 'Not set at repo level' }}" # default value if undefined
jobs:
  echo:
    runs-on: ubuntu-latest
    env:
      JOB_VAR: "I am a job env var"
      OVERWRITTEN: "I have been overwritten at job level"
    steps:
      - name: Print Env Variables
        env:
          STEP_VAR: "I am a step env var"
          step_var2: "I am another step env var"
        run: |
          echo "STEP_VAR: ${{ env.STEP_VAR }}"
          echo "step_var2: ${{ env.step_var2 }}"
          echo "JOB_VAR: ${{ env.JOB_VAR }}"
          echo "WORKFLOW_VAR: ${{ env.WORKFLOW_VAR }}"
          echo "OVERWRITTEN: ${{ env.OVERWRITTEN }}"
      - name: Overwrite Job Variable
        env:
          OVERWRITTEN: "'I have been overwritten at the step level"
        run: |
          echo "OVERWRITTEN: ${{ env.OVERWRITTEN }}"
  echo2:
    runs-on: ubuntu-latest
    steps:
      - name: Print Variables
        run: |
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "UNDEFINED_VAR_WITH_DEFAULT: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
  echo-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Print Staging Variables
        run: |
          echo "Org overwritten var: ${{ env.OVERWRITTEN }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environment var: ${{ vars.TARGET_VAR }}"
  echo-prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Print Prod Variables
        run: |
          echo "Org overwritten var: ${{ env.OVERWRITTEN }}"
          echo "Repo var: ${{ vars.REPOSITORY_VAR }}"
          echo "Environment var: ${{ vars.TARGET_VAR }}"
  echo-undefined:
    runs-on: ubuntu-latest
    steps:
      - name: Print Undefined Variables
        run: |
          echo "Org var: ${{ env.UNDEFINED_VAR_WITH_DEFAULT }}"
